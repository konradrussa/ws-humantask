package org.oasis_open.docs.ns.bpel4people.ws_humantask.leantask.api._200803;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2013-01-20T11:04:51.770+01:00
 * Generated source version: 2.7.0
 * 
 */
@WebServiceClient(name = "LeanTaskService", 
                  wsdlLocation = "file:src/main/resources/oasis/ws-humantask-leantask-api.wsdl",
                  targetNamespace = "http://docs.oasis-open.org/ns/bpel4people/ws-humantask/leantask/api/200803") 
public class LeanTaskService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://docs.oasis-open.org/ns/bpel4people/ws-humantask/leantask/api/200803", "LeanTaskService");
    public final static QName PortLeanTaskCallbackOperations = new QName("http://docs.oasis-open.org/ns/bpel4people/ws-humantask/leantask/api/200803", "portLeanTaskCallbackOperations");
    public final static QName LeanTaskOperations = new QName("http://docs.oasis-open.org/ns/bpel4people/ws-humantask/leantask/api/200803", "leanTaskOperations");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/oasis/ws-humantask-leantask-api.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LeanTaskService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:src/main/resources/oasis/ws-humantask-leantask-api.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public LeanTaskService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LeanTaskService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LeanTaskService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns LeanTaskCallbackOperations
     */
    @WebEndpoint(name = "portLeanTaskCallbackOperations")
    public LeanTaskCallbackOperations getPortLeanTaskCallbackOperations() {
        return super.getPort(PortLeanTaskCallbackOperations, LeanTaskCallbackOperations.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LeanTaskCallbackOperations
     */
    @WebEndpoint(name = "portLeanTaskCallbackOperations")
    public LeanTaskCallbackOperations getPortLeanTaskCallbackOperations(WebServiceFeature... features) {
        return super.getPort(PortLeanTaskCallbackOperations, LeanTaskCallbackOperations.class, features);
    }
    /**
     *
     * @return
     *     returns LeanTaskOperations
     */
    @WebEndpoint(name = "leanTaskOperations")
    public LeanTaskOperations getLeanTaskOperations() {
        return super.getPort(LeanTaskOperations, LeanTaskOperations.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LeanTaskOperations
     */
    @WebEndpoint(name = "leanTaskOperations")
    public LeanTaskOperations getLeanTaskOperations(WebServiceFeature... features) {
        return super.getPort(LeanTaskOperations, LeanTaskOperations.class, features);
    }

}
